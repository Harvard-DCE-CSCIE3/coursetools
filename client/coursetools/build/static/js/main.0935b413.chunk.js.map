{"version":3,"sources":["logo.svg","Header.js","TableCourseList.js","CourseInfo.js","Preview.js","DatePickerFormatter.js","util/APIService.js","CourseModules.js","CourseAssignments.js","Course.js","util/GroupPersistService.js","AppCourseListSelector.js","analytics/StudentAccess.js","CourseGroup.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","CourseLinkRenderer","props","className","href","canvasHost","value","target","to","Cog","Table","onGridReady","params","console","log","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","state","columnDefs","headerName","field","resizable","maxWidth","sortable","filter","checkboxSelection","cellRenderer","cellRendererParams","floatingFilter","filterParams","filterOptions","debounceMs","suppressAndOrCondition","rowData","modules","gridOptions","defaultColDef","rowSelection","frameworkComponents","courseLinkRenderer","passSelectionToParent","onSelectionChanged","selectedRows","this","getSelectedRows","courses","setState","prevProps","loading","showLoadingOverlay","hideOverlay","style","height","width","bind","CourseInfo","available","handleEdit","handleStopEdit","course","event","editMode","obj","workflow_state","start_at","end_at","charAt","toUpperCase","slice","Date","numMods","length","hasMods","modules_published","reduce","acc","val","published","Container","Row","Col","name","Card","Body","Header","ListGroup","ListGroupItem","number","course_code","account","term","students","sections","teachers","workflowState","is_public","toString","default_view","moduleState","window","JSDOM","DOMPurify","createDOMPurify","initCACCL","Preview","getStatus","id","item","html_url","items_url","match","content","courseId","type","setTimeout","getContent","then","c","Math","round","random","page","get","pageURL","page_url","assignment","assignmentId","content_id","assn","other","endpoint","path","method","disc","description","message","quiz","quizId","module_id","file","Popover","Title","as","Content","body","e","preventDefault","OverlayTrigger","delay","show","hide","placement","trigger","rootClose","overlay","title","due_at","unlock_at","lock_at","dangerouslySetInnerHTML","__html","sanitize","ADD_TAGS","onClick","loadPreview","icon","faEye","DatePickerFormatter","row","focused","date","handleDateChange","col","moment","toDate","toISOString","nextProps","selected","onChange","portalId","monthsShown","showTimeSelect","modified","includes","timeFormat","timeIntervals","shouldCloseOnSelect","injectTimes","setHours","setMinutes","dateFormat","popperModifiers","offset","enabled","preventOverflow","escapeWithReference","boundariesElement","DatePickerFormatterUnlock","React","DatePickerFormatterDue","adjustPropertyNamesForCACCL","o","dueAt","unlockAt","lockAt","APIService","updateItem","a","Object","assign","update","l","module_o","url","page_o","responses","updateModules","rows","i","modified_fields","k","discussion_topic","res","push","columns","key","resizeable","formatter","el","u","external_url","faExternalLinkAlt","editable","indent","CustomRowRenderer","CourseModules","onGridRowsUpdated","fromRow","toRow","updated","fromRowData","cellKey","data","indexOf","refresh","showSaveResults","dateHandler","saveToCanvas","clearModifiedFlags","getCellActions","clearAllDates","bulkPublish","mods","flattenModuleData","m","items","content_details","addDateHandlerToRow","d","map","count","column","faSync","callback","newdata","pub","xs","Button","variant","rowGetter","rowsCount","getRowCount","rowRenderer","minHeight","enableCellSelect","Modal","onHide","closeButton","Footer","CourseAssignments","sortRows","assns","assignments","f","flattenData","originalData","sortColumn","sortDirection","sort","b","aValue","bValue","aSplit","split","bSplit","valueOf","onGridSort","Course","enrollments","includeSyllabus","includeTerm","includeAccount","includeDescription","includeSections","includeTeachers","includeCourseImage","includeNeedsGradingCount","list","assnType","listStudents","includeEnrollments","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","process","Text","exact","GroupPersistService","saveCourseGroup","group","localStorage","setItem","JSON","stringify","getCourseGroup","getItem","parse","App","accountid","account_name","accounts","terms","keyword","termid","groupId","handleAccountChange","handleTermChange","handleSubmit","openCourseGroup","listCourses","includeTotalStudents","accountId","includeAccountName","enrollmentTermId","searchTerm","user","self","forEach","lookupTermName","enrollment_term_id","getProfile","profile","label","enrollmentTerm","tms","unshift","fetch","credentials","response","json","now","persist","dispatchEvent","MouseEvent","accountItems","acct","termItems","Form","inline","onSubmit","Group","controlId","Label","Control","placeholder","fluid","StudentAccess","studentsNeverAccessed","studentsAccessed","meanLastAccess","medianLastAccess","createStudentLists","calculateAccessStats","last_activity_at","lastAccessDays","idx","ar","lastAccessDate","daysSinceActivity","date1","date2","differenceMs","abs","days_between","mean","toFixed","median","stdDev","standardDeviation","last_access_std_dev","dataField","text","cell","index","headerStyle","lastAccess","sa","CourseGroup","courseGroup","tabledata","total_students","listTeachers","flattenCourseData","keyField","striped","hover","condensed","Main","groupSelection","onGroupSelectionChanged","selection","AppCourseListSelector","groupSelectionChange","component","Boolean","location","hostname","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0935b413.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// Header.js\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <div>Header is here</div>\n    );\n  }\n}\n\nexport default Header;\n","// Table.js\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport { AgGridReact } from 'ag-grid-react';\nimport Cog from 'dce-reactkit/lib/glyph/Cog';\nimport { Link } from 'react-router-dom'\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\n//import Checkbox from 'dce-reactkit/glyph/Checkbox';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Table props\");\n    console.log(props)\n    this.state = {\n      columnDefs: [\n        { headerName: \"ID\",\n          field: \"id\",\n          resizable: true,\n          maxWidth: 120,\n          sortable:true,\n          filter:true ,\n          checkboxSelection: true,\n          cellRenderer: 'courseLinkRenderer',\n          cellRendererParams: {canvasHost: props.canvasHost},\n        },\n\n        { headerName: \"Name\", field: \"name\", resizable: true, sortable:true, filter:true, floatingFilter: true,\n          filterParams: {\n            filterOptions: ['contains', 'notContains'],\n            debounceMs: 0,\n            suppressAndOrCondition: true,\n          },\n        },\n        { headerName: \"Term\", field: \"term\", maxWidth: 100, resizable: true, sortable:true , filter:true, floatingFilter: true,\n          filterParams: {\n            filterOptions: ['contains', 'notContains'],\n            debounceMs: 0,\n            suppressAndOrCondition: true,\n          },},\n          { headerName: \"Account\", field: \"account_name\", maxWidth: 200, resizable: true, sortable:true , filter:true, floatingFilter: true,\n            filterParams: {\n              filterOptions: ['contains', 'notContains'],\n              debounceMs: 0,\n              suppressAndOrCondition: true,\n            },},\n        { headerName: \"State\", field: \"workflow_state\", maxWidth: 100, resizable: true, sortable:true, filter:true, floatingFilter: true,\n          filterParams: {\n            filterOptions: ['contains', 'notContains'],\n            debounceMs: 0,\n            suppressAndOrCondition: true,\n          },\n        },\n        { headerName: \"Students\", field: \"total_students\", resizable: true, sortable:true, filter:true, maxWidth: 100,},\n        { headerName: \"Start At\", field: \"start_at\", resizable: true, sortable:true, filter: 'agDateColumnFilter' },\n      ],\n      rowData: props.modules,\n      gridOptions: {\n        defaultColDef:{ resizable: true },\n        rowSelection: 'multiple',\n        frameworkComponents:{\n          courseLinkRenderer: CourseLinkRenderer,\n        },\n      },\n      passSelectionToParent : props.onSelectionChanged,\n    }\n  }\n\n  onGridReady = params => {\n    console.log(\"on grid ready\");\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n    const updateData = data => {\n      this.setState({ rowData: data });\n\n    };\n  }\n\n  onSelectionChanged(){\n    var selectedRows = this.gridApi.getSelectedRows();\n    //alert(selectedRows.length);\n    this.state.passSelectionToParent(selectedRows)\n  }\n\n\n  componentDidMount() {\n    console.log(\"table did mount\");\n    console.log(this.props.courses);\n    this.setState({rowData: this.props.courses});\n   }\n\n   componentDidUpdate(prevProps) {\n      if (this.props.loading == true) {\n        this.gridApi && this.gridApi.showLoadingOverlay();\n      }else{\n        this.gridApi && this.gridApi.hideOverlay();\n      }\n      let defs = this.state.columnDefs;\n      defs[0].cellRendererParams.canvasHost = prevProps.canvasHost;\n    }\n\n  render() {\n    return (\n      <div className=\"ag-theme-balham\" style={ {height: '700px', width: '100%'} }>\n        <AgGridReact\n            columnDefs={this.state.columnDefs}\n            rowData={this.props.courses}\n            gridOptions={this.state.gridOptions}\n            onGridReady={ params => {this.gridApi = params.api;    this.gridApi.sizeColumnsToFit();} }\n            onSelectionChanged={this.onSelectionChanged.bind(this)}\n            >\n        </AgGridReact>\n      </div>\n    );\n  }\n}\n\nfunction CourseLinkRenderer(props){\n  return (\n    <div className={'grid_actions'}>\n      <a href={\"https://\"+props.canvasHost+\"/courses/\"+props.value} target=\"_blank\">{props.value}</a>\n      <div className=\"courselink-cog\"><Link to={'/course/'+props.value} target=\"_blank\"><Cog /></Link></div>\n    </div>\n  );\n}\n//process.env.REACT_APP_BASE_URL +\nexport default Table;\n","// Header.js\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Col, Row, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\n\nclass CourseInfo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state ={\n      available: '',\n    }\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleStopEdit = this.handleStopEdit.bind(this);\n    console.log(props.course);\n  }\n\n\n  handleEdit(event) {\n      this.setState({editMode: true});\n  }\n  handleStopEdit(event) {\n      this.setState({editMode: false});\n  }\n  workflowState () {\n      // get availability info\n      // 'unpublished', 'available', 'completed', or 'deleted'\n      let obj = {\n        workflow_state: '',\n        start_at: '',\n        end_at: ''\n      };\n      let {workflow_state, start_at, end_at}  = this.props.course;\n      //debugger;\n      if (workflow_state){\n        workflow_state =  (workflow_state==\"available\" ? \"Published\" : workflow_state.charAt(0).toUpperCase() + workflow_state.slice(1));\n      }\n      obj.workflow_state = workflow_state;\n      if (start_at){\n        obj.start_at = new Date(start_at);\n      }\n      if (end_at){\n        obj.end_at = new Date(end_at);\n      }\n      return obj;\n  }\n\n  moduleState(){\n    let numMods = this.props.course.modules.length;\n     let modsPublished = this.props.course.modules.reduce((acc, val)=>{\n        if(val.published){\n          return ++acc;\n        }\n        return acc;\n      }, 0);\n      return {\n        modules: numMods,\n        hasMods: numMods>0,\n        modules_published: modsPublished,\n      };\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col><h2>{this.props.course.name}</h2></Col>\n        </Row>\n        <Row>\n          <Col>\n              <Card>\n                <Card.Body>\n                  <Card.Header>Course Info</Card.Header>\n                  <ListGroup>\n                    <ListGroupItem><b>Course ID: </b>{this.props.number}</ListGroupItem>\n                    <ListGroupItem><b>Course Code: </b> {this.props.course.course_code}</ListGroupItem>\n                    <ListGroupItem><b>Account: </b> {this.props.course.account.name} </ListGroupItem>\n                    <ListGroupItem><b>Term: </b> {this.props.course.term.name}\n                                   { (this.props.course.term.start_at ) ? <div><br /><b>Term Dates: </b> {this.props.course.term.start_at} until {this.props.course.term.end_at}</div> : ''\n                                   }\n                     </ListGroupItem>\n                  </ListGroup>\n                  <Card.Header>Enrollment Info</Card.Header>\n                  <ListGroup>\n                    <ListGroupItem><b>Students </b>{this.props.course.students.length}</ListGroupItem>\n                    <ListGroupItem><b>Sections: </b> {this.props.course.sections.length}</ListGroupItem>\n                    <ListGroupItem><b>Teachers: </b> {this.props.course.teachers.length} </ListGroupItem>\n                  </ListGroup>\n                </Card.Body>\n              </Card>\n          </Col>\n          <Col>\n          <Card>\n            <Card.Body>\n              <Card.Header>Visibility</Card.Header>\n              <ListGroup>\n                <ListGroupItem><b>Availability: </b> {this.workflowState().workflow_state}</ListGroupItem>\n                <ListGroupItem><b>Is Public: </b> { this.props.course.is_public ? \"Yes\" : \"No\"}</ListGroupItem>\n                <ListGroupItem><b>Opens On: </b> {this.workflowState().start_at.toString()}</ListGroupItem>\n                <ListGroupItem><b>Closes On: </b> {this.workflowState().end_at.toString()}</ListGroupItem>\n              </ListGroup>\n              <Card.Header>Configuration</Card.Header>\n              <ListGroup>\n                <ListGroupItem><b>Default View: </b> {this.props.course.default_view}</ListGroupItem>\n                <ListGroupItem><b>Modules: </b> { this.moduleState().modules}</ListGroupItem>\n                <ListGroupItem><b>Published Modules: </b> { this.moduleState().modules_published}</ListGroupItem>\n\n              </ListGroup>\n            </Card.Body>\n          </Card>\n          </Col>\n\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default CourseInfo;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\nimport { OverlayTrigger, Popover  } from 'react-bootstrap';\n\n// for the preview html\nimport createDOMPurify from 'dompurify';\nimport { JSDOM } from 'jsdom';\n\n// Import caccl\nimport initCACCL from 'caccl/client/cached';\n\n// set up DOMPurify\nconst window = (new JSDOM('')).window;\nconst DOMPurify = createDOMPurify(window);\n\nconst { api, getStatus } = initCACCL();\n\nclass Preview extends Component {\n   constructor(props){\n     super(props);\n     let html_url = props.item.html_url || props.item.items_url;\n     let id = html_url.match(/courses\\/(\\d+)\\//)[1];\n     this.state = {\n       content: {},\n       courseId: id,\n       type: props.item.type || '',\n     }\n   }\n\n   componentDidMount() {\n     setTimeout(()=>{\n       let content = this.getContent().then((c)=>{\n       this.setState({content: c});\n     })}, Math.round((Math.random()*5000))// cheesy way to avoid throttling: generate random loading time from 0 to 5 seconds\n   )}\n\n  async getContent(){\n    let type=this.props.item.type;\n    if (type=='Page'){\n      let page = await api.course.page.get({\n        courseId: this.state.courseId,\n        pageURL: this.props.item.page_url,\n      });\n      return page;\n    } else if (type=='Assignment'){\n      let assn = await api.course.assignment.get({\n        courseId: this.state.courseId,\n        assignmentId: this.props.item.content_id,\n      });\n      return assn;\n    } else if (type=='Discussion'){\n      console.log(`getting /api/v1/courses/${this.state.courseId}/discussion_topics/${this.props.item.content_id}`)\n      let disc = await api.other.endpoint({\n        path: `/api/v1/courses/${this.state.courseId}/discussion_topics/${this.props.item.content_id}`,\n        method: 'GET',\n      });\n      console.log(disc);\n      disc.description = disc.message;\n      return disc.assignment || disc;\n    } else if (type=='Quiz'){\n      let quiz = await api.course.quiz.get({\n        courseId: this.state.courseId,\n        quizId: this.props.item.content_id,\n      });\n      return quiz;\n    } else if (type=='File'){\n      let file = await api.other.endpoint({\n        path: `/api/v1/courses/${this.state.courseId}/modules/${this.props.item.module_id}/items/${this.props.item.id}`,\n        method: 'GET',\n      });\n      return file;\n    }\n    return;\n  }\n\n popover(){\n    return (\n      <Popover id=\"popover-basic\">\n        <Popover.Title as=\"h3\">Page Content</Popover.Title>\n        <Popover.Content>\n          {this.state.content.body}\n        </Popover.Content>\n      </Popover>\n  )};\n\n  loadPreview(e) {\n    /*debugger;\n    console.log(\"loading\");\n    let content = this.getContent();\n    this.setState({\n      content: content,\n    })*/\n    e.preventDefault();\n    return false;\n  }\n\n  render(){\n    return (\n        <OverlayTrigger\n          delay={{ show: 50, hide: 200 }}\n          placement=\"right\"\n          trigger=\"click\"\n          rootClose\n          overlay={(\n            <Popover id=\"popover-basic\">\n              <Popover.Title as=\"h3\">{(this.state.type || '') + ': ' + (this.state.content && (this.state.content.title || this.state.content.name || ''))}</Popover.Title>\n              <Popover.Content>\n              {\n                (this.state.type==\"Assignment\" || this.state.type==\"Quiz\" || this.state.type==\"Discussion\")  &&\n                 <div className={'assn_dates_popover'}>\n                   <b>Due At:</b>{this.state.content && (this.state.content.due_at || '')} <b>Unlock At: </b>{this.state.content && (this.state.content.unlock_at || '')} <b>Available Until: </b>{this.state.content && (this.state.content.lock_at || '')}\n                 </div>\n               }\n                   <div className={'preview_content'} dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize((this.state.content && (this.state.content.body || this.state.content.description || 'N/A')), {ADD_TAGS: ['iframe']}) }} />\n              </Popover.Content>\n            </Popover>\n          )}>\n          <a href=\"#\" onClick={this.loadPreview} title=\"Preview Content\" className=\"previewIcon\"><FontAwesomeIcon icon={faEye} /></a>\n        </OverlayTrigger>\n  )};\n}\n// see if this even runs...\n\n\nexport default Preview;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport setHours from 'date-fns/setHours';\nimport setMinutes from 'date-fns/setMinutes';\n\nclass DatePickerFormatter extends Component {\n   constructor(props){\n     super(props);\n     this.state = {\n       row: props.row,\n       value: props.value,\n       focused: true,\n       date: null,\n       handleDateChange: props.handleDateChange\n     }\n     this.handleDateChange = this.handleDateChange.bind(this);\n   }\n\n  componentDidMount() {\n    if  (this.state.row && this.state.row[this.props.col]){\n      this.setState( {date: moment(this.state.row[this.props.col]).toDate()} );\n    }\n  }\n\n  handleDateChange(date){\n    this.state.row[this.props.col] = (date && date.toISOString()) || '';\n    console.log(\"updated date: \" + this.state.row[this.props.col])\n    this.state.row.handleDateChange(date, this.props.col, this.state.row);\n    // set the local state so that the field updates\n    this.setState({date: date});\n  }\n\n  componentWillReceiveProps(nextProps) {\n      // if there's a new date value, use it\n      if  (nextProps.row && nextProps.row[this.props.col]){\n        this.setState({ date: moment(nextProps.row[this.props.col]).toDate(), row: nextProps.row });\n      }else{\n        // otherwise, set date to null\n        this.setState({ date: null, row: nextProps.row });\n      }\n  }\n\n  render(){\n    let type = this.state.row && this.state.row.type;\n    let id = (this.state.row && this.state.row.id) || null;\n    // skip due_at for modules - does not apply\n    if (type=='Module' && this.props.col=='due_at'){\n      return <span></span>\n    }\n    if (type=='Module' || type=='Assignment' || type=='Quiz' || type=='Discussion'){\n      return (<DatePicker\n              id={this.props.col + id}\n              selected={this.state.date}\n              onChange={date => this.handleDateChange(date)}\n              portalId=\"root-portal\"\n              monthsShown={1}\n              showTimeSelect\n              className={(this.state.row.modified && this.state.row.modified.includes(this.props.col)) ? 'edited_cell' : '' }\n              timeFormat=\"HH:mm\"\n              timeIntervals={60}\n              shouldCloseOnSelect={true}\n              injectTimes={[\n                setHours(setMinutes(new Date(), 59), 23)\n              ]}\n              dateFormat=\"MM/dd/yyyy h:mm aa\"\n              popperModifiers={{\n                offset: {\n                  enabled: true,\n                  offset: \"5px, 10px\"\n                },\n                preventOverflow: {\n                  enabled: true,\n                  escapeWithReference: false,\n                  boundariesElement: \"viewport\"\n                }\n              }}\n              />\n            );\n      }else{\n          return <span></span>\n      }\n    }\n\n}\n// see if this even runs...\n//class DatePickerFormatterUnlock extends DatePickerFormatter{\n/*  constructor(props){\n    let p =  Object.assign({}, props);\n    p.key = 'unlock_at';\n    console.log(p);\n    super(p);\n  }\n}*/\n\nclass DatePickerFormatterUnlock extends React.Component {\n    render() {\n        return <DatePickerFormatter {...this.props} col=\"unlock_at\" />;\n    }\n}\nclass DatePickerFormatterDue extends React.Component {\n    render() {\n        return <DatePickerFormatter {...this.props} col=\"due_at\" />;\n    }\n}\n\n\nexport { DatePickerFormatter, DatePickerFormatterUnlock, DatePickerFormatterDue };\n","// Import caccl\nimport initCACCL from 'caccl/client/cached';\n\nconst { api, getStatus } = initCACCL();\n\nfunction adjustPropertyNamesForCACCL(o){\n  if (o.due_at) o.dueAt = o.due_at;\n  if (o.unlock_at) o.unlockAt = o.unlock_at;\n  if (o.lock_at) o.lockAt = o.lock_at;\n  return o;\n}\nclass APIService {\n\n}\n\nAPIService.updateItem = async function(type, id, content_id, o){\n  console.log('type is '+type);\n  console.log('content_id is '+content_id);\n  let params = {};\n  switch(type){\n    case 'Assignment':\n      o = adjustPropertyNamesForCACCL(o);\n      params =  Object.assign({assignmentId: content_id,}, o);\n      return await api.course.assignment.update(params);\n      break;\n    case 'Module':\n     // In CanvasAPI, module param names must be wrapped in 'module[]'\n      let module_o = {}\n      for(let l in o){\n          module_o['module['+l+']'] = o[l];\n      }\n      //console.log(`/api/v1/courses/${o.courseId}/modules/${id}`);\n      //console.log(module_o)\n      params =  {\n        method: 'PUT',\n        path: `/api/v1/courses/${o.courseId}/modules/${id}`,\n        params: module_o,\n      };\n      return await api.other.endpoint(params);\n      break;\n    case 'Quiz':\n      // change params property names for CACCL\n      o = adjustPropertyNamesForCACCL(o);\n      params =  Object.assign({quizId: content_id,}, o);\n      return await api.course.quiz.update(params);\n      break;\n    case 'Discussion':\n      o = adjustPropertyNamesForCACCL(o);\n      params =  {\n        method: 'PUT',\n        path: `/api/v1/courses/${o.courseId}/discussion_topics/${content_id}`,\n        params: o,\n      };\n      return await api.other.endpoint(params);\n      break;\n    case 'Page':\n    // In CanvasAPI, page param names must be wrapped in 'wiki_page[]'\n     let url = content_id.match(/.*\\/(\\S+)/);\n     console.log('url');console.log(url[1]);\n     let page_o = {}\n     for(let l in o){\n         page_o['wiki_page['+l+']'] = o[l];\n     }\n     //page_o['wiki_page[title]'] = o.name;\n      params =  {\n        method: 'PUT',\n        path: `/api/v1/courses/${o.courseId}/pages/${url[1]}`,\n        params: page_o,\n      };\n      return await api.other.endpoint(params);\n      break;\n    case 'ExternalUrl':\n    case 'SubHeader':\n    case 'ExternalTool':\n    case 'File':\n      params =  {\n        method: 'PUT',\n        path: `/api/v1/courses/${o.courseId}/modules/${o.module_id}/items/${id}`,\n        params: {\n          'module_item[title]': o.name,\n        },\n      };\n      return await api.other.endpoint(params);\n      break;\n  }\n}\n\nAPIService.responses = [];\nAPIService.updateModules = async function(courseId, rows){\n\n  //accumulate responses\n  this.responses = [];\n\n  let o = {\n    courseId: courseId,\n  };\n\n  // go over this list of rows\n  for (let i=0; i<rows.length; i++){\n    // see if there's modified fields in this row\n    if (rows[i].modified.length > 0 ){\n      console.log(\"updating a row\");\n      console.log(rows[i]);\n\n      let modified_fields = rows[i].modified;\n      // since there are, we pull these keys and values into a new object\n      for (let k=0;k<rows[i].modified.length;k++){\n        // need to handle the case where this is a date that's been cleared. In that case,\n        // the date can't be passed as null, but needs to be an empty string\n        if (modified_fields[k] == 'unlock_at' || modified_fields[k] == 'lock_at' || modified_fields[k] == 'due_at'){\n          o[modified_fields[k]] = rows[i][modified_fields[k]] || '';\n        } else {\n          // it's not a date field, so copy as is\n          o[modified_fields[k]] = rows[i][modified_fields[k]];\n        }\n      }\n      // manully override to overcome bug in CACCL(?)\n      // title is always claled name in the grid\n      o.name = rows[i].name;\n      o.title = rows[i].name;\n      o.module_id = rows[i].module_id;\n\n      // call appropriate method to update this row\n      try{\n        console.log(\"calling updateItem on \"+rows[i].type+\" with content_id \"+ rows[i].content_id +\"params \");\n        console.log(o);\n        await this.updateItem(rows[i].type, rows[i].id, (rows[i].content_id || rows[i].url || (rows[i].discussion_topic && rows[i].discussion_topic.id) || null), o).then(res => this.responses.push(res));\n      }catch(err){\n        console.log('failed in APIService.updateModules' + err);\n      }\n      //return responses;\n    }\n  }\n}// end updateModules\n\n\nexport default APIService;\n","// Header.js\nimport React, { Component } from 'react';\nimport DataGrid from 'react-data-grid';\nimport {Row as DataGridRow} from 'react-data-grid';\n//import  RowWithCellKeys from './RowWithCellKeys';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faSync } from '@fortawesome/free-solid-svg-icons'\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\n//import 'react-data-grid/dist/react-data-grid.css';\nimport { Container, Col, Row, Button, Modal  } from 'react-bootstrap';\nimport Preview from './Preview';\nimport { DatePickerFormatterUnlock, DatePickerFormatterDue } from './DatePickerFormatter';\nimport APIService from './util/APIService';\n\n\n\nconst columns = [\n  { key: \"position\", name: \"Actions\", width: 75, resizeable: false, formatter: ActionsFormatter },\n  { key: \"name\", name: \"Name (double-click to edit)\", width: 400, resizeable: true, editable: true, formatter: EditableFormatter,},\n  { key: \"published\", name: \"Published\", width: 100, formatter: PublishedFormatter, resizeable: true, },\n  { key: \"type\", name: \"Type\", width: 110, resizeable: true,},\n  { key: \"unlock_at\", name: \"Unlock At\", resizeable: true, formatter: DatePickerFormatterUnlock, },//editor: DatePickerEditor,\n  { key: \"due_at\", name: \"Due At\", resizeable: true, formatter: DatePickerFormatterDue, },//editor: DatePickerEditor,\n];\n\nlet data=[];\n\nfunction PublishedFormatter( el ) {\n  let row = el.row;\n  if (row.modified && row.modified.includes('published')){\n    // this is a modified cell: highlight it\n    return <span className={'edited_cell'}>{el.value ? \"Yes\" : \"No\"}</span>\n  }\n  return <span>{el.value ? \"Yes\" : \"No\"} </span>;\n}\n\nfunction EditableFormatter( el ){\n    // check each modified field for a match to this value\n\n  let row = el.row;\n  //if (row.id = 1947828) console.log(el);\n  for (let i=0; row.modified && i<row.modified.length; i++){\n    let key = row.modified[i];\n    if (row[key] == el.value){\n      // this is a modified cell: highlight it\n      return <span className={'edited_cell indent-'+row.indent}>{el.value}</span>\n    }\n  }\n  return <span className={'indent-'+row.indent}>{el.value}</span>;\n}\n\nfunction ActionsFormatter( el ){\n    // check each modified field for a match to this value\n  let row = el.row;\n  //handle before url is populated\n  let u = el.row.url || '';\n\n  // Ignore ExternalTool type, regardless of its properties\n  if (row.type==\"ExternalTool\"){\n    return <span></span>;\n  }\n  // Handle ExternalUrl case with direct link only\n  if (row.external_url){\n    return <span><a href={row.external_url} target=\"_blank\" title=\"Open in Canvas (opens in a new window)\"><FontAwesomeIcon className=\"externalLinkIcon\" icon={faExternalLinkAlt} /></a></span>;\n  }\n  // For all other tools (Canvas tools), get the direct URL\n  // remove /api/v1 from the url\n  let url = u.match(/([\\s\\S]*?)\\/api\\/v1([\\s\\S]*)/);\n  if (url && url.length>0){\n    return <span><a href={url[1]+url[2]} target=\"_blank\" title=\"Open in Canvas (opens in a new window)\"><FontAwesomeIcon className=\"externalLinkIcon\" icon={faExternalLinkAlt} /></a><Preview item={row}/></span>;\n  }\n  return <span></span>;\n}\n\nfunction PreviewClick(e){\n  console.log('preview clicked');\n  return false;\n}\nfunction CustomRowRenderer(props) {\n   // Here the height of the base row is overridden by a value of 100\n   //console.log(props);\n   if (props.row.type == \"Module\"){\n     return <div className={'module_row'}><DataGridRow {...props} /></div> // datgridrow\n     //return renderBaseRow({...canvasProps, extraClasses: 'module_row'});\n   }else{\n     return <DataGridRow {...props} />;  //DataGridRow\n   }\n}\n/*function CustomRowRenderer(renderBaseRow, ...canvasProps) {\n // Here the height of the base row is overridden by a value of 100\n console.log(\"canvasProps\");console.log(canvasProps);\n return renderBaseRow({...canvasProps, height: 100});\n}*/\n\nclass CourseModules extends Component {\n\n  constructor(props){\n    super(props);\n    this.state= {\n      data: [],\n      modified: false,\n      refresh: false,\n      showSaveResults: false,\n      responses: [],\n    }\n    this.dateHandler = this.dateHandler.bind(this);\n    this.saveToCanvas = this.saveToCanvas.bind(this);\n    this.clearModifiedFlags = this.clearModifiedFlags.bind(this);\n    this.getCellActions = this.getCellActions.bind(this);\n    this.clearAllDates = this.clearAllDates.bind(this);\n    this.bulkPublish = this.bulkPublish.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"table did mount\");\n    console.log(this.props.course);\n    const mods = this.props.course.modules || [];\n    this.setState({data: this.flattenModuleData(mods)});\n   }\n\n   //componentDidUpdate(prevProps) {\n  componentWillReceiveProps(nextProps) {\n     console.log(\"table getting props\");\n     //console.log(this.props.course);\n     //const mods = this.props.course.modules || [];\n     //console.log(nextProps.course);\n     const mods = nextProps.course.modules || [];\n     //if (prevProps.course.modules.length != this.props.course.modules.length) {\n       //console.log('tableDidUpdate, saving state')\n       this.setState({data: this.flattenModuleData(mods)});\n     //}\n    }\n\n    onGridRowsUpdated = ({ fromRow, toRow, updated, cellKey, fromRowData }) => {\n      this.setState({modified: true,})\n      // see if this is changed\n      this.setState(state => {\n        const data = state.data.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          data[i] = { ...data[i], ...updated };  //this gets us a row\n          for (let el in updated){  // get property names of updated\n            if (updated[el] != fromRowData[el]){ // if the value has changed\n              if (data[i].modified.indexOf(el) == -1 ){ // this ;looks for the key name in the modified list\n                data[i].modified.push(el);\n                console.log(\"pushing modified: \"+ el + \" to \" + data[i].modified );\n              }\n            }\n          }\n        }\n        return { data };\n      });\n  };\n\n /* Turn the modules/module_items nesting into a flat structure for\n    rendering by the table\n    */\n  flattenModuleData(modules){\n    console.log(\"flattening\");//console.log(modules);\n    let data = [];\n    // for each module\n    for(let i=0; modules && i<modules.length; i++){\n      // insert modules[i] into the data array\n      let m  = modules[i];\n      m.type = 'Module';\n      m.modified = [];\n      data.push(m);\n      // now push all the module_items onto the array, adding a name field to normalise title to name for items\n      for (let k=0; m.items && k<m.items.length; k++){\n        let o = m.items[k];\n        o.name = o.title;\n        o.modified = [];\n        // and flatten content_details into the item data as well (unlock_at, due_at for assignments/discussions)\n        for(let m in o.content_details){\n          o[m] = o.content_details[m];\n        }\n        data.push(o);\n      }\n    }\n    console.log(\"flattened\");console.log(data);\n    data = this.addDateHandlerToRow(data);\n    return data;\n  }\n\n  dateHandler(date, col, row){\n    console.log(\"cjhanging date\");\n    // find this row in the state data\n    let d = this.state.data;\n    for (let i=0;i<d.length;i++){\n      if (d[i].id == row.id){\n        d[i][col] = (date && date.toISOString()) || null;//d[i][col+'new']\n        d[i].modified.push(col);\n        console.log(\"changed \" + col + \" to \"+ d[i][col] ); //save this so I can revert d[i][col+'new']\n        this.setState({data: d, modified: true,});\n        return;\n      }\n    }\n  }\n  clearModifiedFlags(data){\n    return data.map(row=>{\n      row.modified = [];\n      return row;\n    })\n  }\n\n  addDateHandlerToRow(data){\n    return data.map(row => {\n      row.handleDateChange = this.dateHandler;\n      // failed - update cycle refreshes this\n      //row.unlock_at_orig = row.unlock_at || '';\n      return row;\n    });\n  }\n// used to force the grid to refresh (reports a fake table length, then fixes it)\n// came from github issue resolution in react-data-grid\n  getRowCount() {\n      let count = this.state.data.length;\n      console.log(\"count is \"+ count);\n\n      if(this.state.refresh && count > 0) {\n        count--; // hack for update data-grid\n        this.setState({\n          refresh: false\n        });\n      }\n      return count;\n    }\n  // works with above to force a refesh of the table\n  refresh() {\n      this.setState({\n        refresh: true\n      });\n    }\n\n  async saveToCanvas(){\n    console.log(\"sAVING\")\n    APIService.updateModules(this.props.course.id, this.state.data).then((res)=>{ //await\n      console.log('clearing flags');\n      this.setState({data: this.clearModifiedFlags(this.state.data)});\n      console.log(\"saved response\");\n      console.log(APIService.responses);\n      this.setState({ showSaveResults: true, responses: APIService.responses, modified: false,})\n      this.refresh();\n      console.log('refreshed');\n    });\n  }\n\n getCellActions(column, row) {\n    const cellActions = {\n      published: [\n         {\n           icon: <span><FontAwesomeIcon className=\"externalLinkIcon\" icon={faSync} /></span>,\n           callback: ()=>{\n             //iterate over state rows, look for matching id row from the data, chage publish field\n             let d = this.state.data;\n             for (let i=0;i<d.length;i++){\n               if (d[i].id == row.id){\n                 console.log('found the row, was '+d[i].published);\n                 d[i].published = (d[i].published == true ? false : true);//d[i][col+'new']\n                 console.log('now is '+d[i].published);\n                 d[i].modified.push('published');\n                 this.setState({data: d, modified: true,});\n                 this.refresh();\n                 return;\n               }\n             }\n           }\n        }\n      ],\n    };\n    return cellActions[column.key];\n  }\n\n  clearAllDates(){\n    let data = this.state.data;\n    console.log(data);\n    let newdata = data.map((row)=>{\n      if (row.unlock_at != ''){\n        row.unlock_at = '';\n        row.modified.push('unlock_at')\n      }\n      if (row.due_at != ''){\n        row.due_at = '';\n        row.modified.push('due_at')\n      }\n      return row;\n    })\n    console.log(newdata)\n    this.setState({data: newdata});\n    this.refresh();\n  }\n\n  bulkPublish(pub){\n    let data = this.state.data;\n    let newdata = data.map((row)=>{\n      if(row.published != pub) {\n        row.modified.push('published');\n        row.published = pub;\n      }\n      return row;\n    })\n    console.log(newdata);\n    this.setState({data: newdata, modified: true});\n    this.refresh();\n  }\n\n  render() {\n    //console.log(\"here\");console.log(data)\n\n    // from tag for canary rows={this.state.data} rowRenderer={CustomRowRenderer}\n    //<Button variant=\"warning\" onClick={this.revert}>Revert Changes</Button>\n    return (\n      <div>\n      <Container>\n        <Row>\n          <Col><h3>Modules</h3></Col>\n          <Col xs={6}>\n\n              <Button className={'bulk-actions-button'} variant=\"primary\" onClick={this.clearAllDates}>Clear All Dates</Button>\n              <Button className={'bulk-actions-button'} variant=\"primary\" onClick={()=>this.bulkPublish(false)}>Unpublish All</Button>\n              <Button className={'bulk-actions-button'} variant=\"primary\" onClick={()=>this.bulkPublish(true)}>Publish All</Button>\n\n          </Col>\n          <Col>\n            {this.state.modified &&\n                        <div><Button variant=\"primary\" className={'float-top'} onClick={this.saveToCanvas}>Save Changes</Button> </div>\n              }\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <DataGrid\n            columns={columns}\n            rowGetter={i => this.state.data[i]}\n            rowsCount={this.getRowCount()}\n            rowRenderer={CustomRowRenderer}\n            minHeight={(this.state.data.length*36 )+40}\n            enableCellSelect={true}\n            onGridRowsUpdated={this.onGridRowsUpdated}\n            getCellActions={this.getCellActions}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={this.state.showSaveResults} onHide={()=>{this.setState({showSaveResults: false, responses: [] })}}>\n       <Modal.Header closeButton>\n         <Modal.Title>Canvas Data Saved</Modal.Title>\n       </Modal.Header>\n       <Modal.Body>{this.state.responses.length} records were updated in Canvas</Modal.Body>\n       <Modal.Footer>\n         <Button variant=\"secondary\" onClick={()=>{this.setState({showSaveResults: false, responses: [] })}}>\n           Close\n         </Button>\n       </Modal.Footer>\n     </Modal>\n      </div>\n    );\n  }\n}\n//rowsCount={this.state.data.length}\n\nexport default CourseModules;\n","import React, { Component } from 'react';\nimport DataGrid from 'react-data-grid';\nimport {Row as DataGridRow} from 'react-data-grid';\n//import  RowWithCellKeys from './RowWithCellKeys';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faSync } from '@fortawesome/free-solid-svg-icons'\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\n//import 'react-data-grid/dist/react-data-grid.css';\nimport { Container, Col, Row, Button, Modal  } from 'react-bootstrap';\nimport Preview from './Preview';\nimport { DatePickerFormatterUnlock, DatePickerFormatterDue } from './DatePickerFormatter';\nimport APIService from './util/APIService';\n\n\n\nconst columns = [\n  { key: \"position\", name: \"Actions\", width: 75, resizeable: false, formatter: ActionsFormatter },\n  { key: \"name\", name: \"Name\", width: 400, resizeable: true, editable: true, sortable: true, formatter: EditableFormatter,},\n  { key: \"published\", name: \"Published\", width: 100, formatter: PublishedFormatter, resizeable: true, },\n  { key: \"type\", name: \"Type\", width: 110, sortable: true, resizeable: true,},\n  { key: \"unlock_at\", name: \"Unlock At\", resizeable: true, sortable: true, formatter: DatePickerFormatterUnlock, },//editor: DatePickerEditor,\n  { key: \"due_at\", name: \"Due At\", resizeable: true, sortable: true, formatter: DatePickerFormatterDue, },//editor: DatePickerEditor,\n];\n\nlet data=[];\n\nfunction PublishedFormatter( el ) {\n  let row = el.row;\n  if (row.modified && row.modified.includes('published')){\n    // this is a modified cell: highlight it\n    return <span className={'edited_cell'}>{el.value ? \"Yes\" : \"No\"}</span>\n  }\n  return <span>{el.value ? \"Yes\" : \"No\"} </span>;\n}\n\nfunction EditableFormatter( el ){\n    // check each modified field for a match to this value\n\n  let row = el.row;\n  //if (row.id = 1947828) console.log(el);\n  for (let i=0; row.modified && i<row.modified.length; i++){\n    let key = row.modified[i];\n    if (row[key] == el.value){\n      // this is a modified cell: highlight it\n      return <span className={'edited_cell indent-'+row.indent}>{el.value}</span>\n    }\n  }\n  return <span className={'indent-'+row.indent}>{el.value}</span>;\n}\n\nfunction ActionsFormatter( el ){\n    // check each modified field for a match to this value\n    console.log(el);\n  let row = el.row;\n  // assign content id to row so that Preview works with thses as well as modules\n  //row.content_id = row.id;\n  row.content_id = (row.discussion_topic && row.discussion_topic.id) || row.id;\n  //handle before url is populated\n  // CHANGE FROM MODULES _ HTMLURRL TARTHER THAN URL\n  let url = el.row.html_url || '';\n\n  // Ignore ExternalTool type, regardless of its properties\n  if (row.type==\"ExternalTool\"){\n    return <span></span>;\n  }\n  // Handle ExternalUrl case with direct link only\n  if (row.external_url){\n    return <span><a href={row.external_url} target=\"_blank\" title=\"Open in Canvas (opens in a new window)\"><FontAwesomeIcon className=\"externalLinkIcon\" icon={faExternalLinkAlt} /></a></span>;\n  }\n  // For all other tools (Canvas tools), get the direct URL\n  // remove /api/v1 from the url\n  if (url && url.length>0){\n    return <span><a href={url} target=\"_blank\" title=\"Open in Canvas (opens in a new window)\"><FontAwesomeIcon className=\"externalLinkIcon\" icon={faExternalLinkAlt} /></a><Preview item={row}/></span>;\n  }\n  return <span></span>;\n}\n\nfunction PreviewClick(e){\n  console.log('preview clicked');\n  return false;\n}\nfunction CustomRowRenderer(props) {\n   // Here the height of the base row is overridden by a value of 100\n   //console.log(props);\n   if (props.row.type == \"Module\"){\n     return <div className={'module_row'}><DataGridRow {...props} /></div> // datgridrow\n     //return renderBaseRow({...canvasProps, extraClasses: 'module_row'});\n   }else{\n     return <DataGridRow {...props} />;  //DataGridRow\n   }\n}\n/*function CustomRowRenderer(renderBaseRow, ...canvasProps) {\n // Here the height of the base row is overridden by a value of 100\n console.log(\"canvasProps\");console.log(canvasProps);\n return renderBaseRow({...canvasProps, height: 100});\n}*/\n\nclass CourseAssignments extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data: [],\n      modified: false,\n      refresh: false,\n      showSaveResults: false,\n      responses: [],\n    }\n    this.dateHandler = this.dateHandler.bind(this);\n    this.saveToCanvas = this.saveToCanvas.bind(this);\n    this.clearModifiedFlags = this.clearModifiedFlags.bind(this);\n    this.getCellActions = this.getCellActions.bind(this);\n    this.clearAllDates = this.clearAllDates.bind(this);\n    this.bulkPublish = this.bulkPublish.bind(this);\n    this.sortRows = this.sortRows.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"table did mount\");\n    console.log(this.props.course);\n    const assns = this.props.course.assignments || [];\n    let f = this.flattenData(assns);\n    this.setState({data: f, originalData: f.slice(0)});\n   }\n\n   //componentDidUpdate(prevProps) {\n  componentWillReceiveProps(nextProps) {\n     console.log(\"table getting props\");\n     let f = this.flattenData(nextProps.course.assignments) || [];\n     this.setState({data: f, originalData: f.slice(0) });\n  }\n\n  flattenData(assns){\n    console.log(\"flattening\");//console.log(modules);\n    let data = [];\n    // for each module\n    for(let i=0; assns && i<assns.length; i++){\n      // insert assns[i] into the data array\n      let m  = assns[i];\n      m.modified = [];\n      data.push(m);\n    }\n    console.log(\"flattened\");console.log(data);\n    data = this.addDateHandlerToRow(data);\n    return data;\n  }\n\n    onGridRowsUpdated = ({ fromRow, toRow, updated, cellKey, fromRowData }) => {\n      this.setState({modified: true,})\n      // see if this is changed\n      this.setState(state => {\n        const data = state.data.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          data[i] = { ...data[i], ...updated };  //this gets us a row\n          for (let el in updated){  // get property names of updated\n            if (updated[el] != fromRowData[el]){ // if the value has changed\n              if (data[i].modified.indexOf(el) == -1 ){ // this ;looks for the key name in the modified list\n                data[i].modified.push(el);\n                console.log(\"pushing modified: \"+ el + \" to \" + data[i].modified );\n              }\n            }\n          }\n        }\n        return { data };\n      });\n  };\n\n  dateHandler(date, col, row){\n    console.log(\"cjhanging date\");\n    // find this row in the state data\n    let d = this.state.data;\n    for (let i=0;i<d.length;i++){\n      if (d[i].id == row.id){\n        d[i][col] = (date && date.toISOString()) || null;//d[i][col+'new']\n        d[i].modified.push(col);\n        console.log(\"changed \" + col + \" to \"+ d[i][col] ); //save this so I can revert d[i][col+'new']\n        this.setState({data: d, modified: true,});\n        return;\n      }\n    }\n  }\n  clearModifiedFlags(data){\n    return data.map(row=>{\n      row.modified = [];\n      return row;\n    })\n  }\n\n  addDateHandlerToRow(data){\n    return data.map(row => {\n      row.handleDateChange = this.dateHandler;\n      // failed - update cycle refreshes this\n      //row.unlock_at_orig = row.unlock_at || '';\n      return row;\n    });\n  }\n\n\n  sortRows(sortColumn, sortDirection) {\n\n        const comparer = (a, b) => {\n          var aValue = a[sortColumn];\n          var bValue = b[sortColumn];\n\n          if (sortColumn === \"date\")\n          {\n            var aSplit = a[sortColumn].split('.');\n            var aDate = new Date(aSplit[2], aSplit[1] - 1, aSplit[0]);\n            var aValue = aDate.valueOf();\n\n            var bSplit = b[sortColumn].split('.');\n            var bDate = new Date(bSplit[2], bSplit[1] - 1, bSplit[0]);\n            var bValue = bDate.valueOf();\n          };\n\n          if (sortDirection === 'ASC') {\n              return (aValue > bValue) ? 1 : -1;\n            } else if (sortDirection === 'DESC') {\n              return (aValue < bValue) ? 1 : -1;\n            }\n        };\n        const rows = sortDirection === 'NONE' ? this.state.originalData.slice(0) : this.state.data.sort(comparer);\n\n        this.setState({data: rows});\n    }\n// used to force the grid to refresh (reports a fake table length, then fixes it)\n// came from github issue resolution in react-data-grid\n  getRowCount() {\n    //debugger;\n      let count = this.state.data.length;\n      console.log(\"count is \"+ count);\n\n      if(this.state.refresh && count > 0) {\n        count--; // hack for update data-grid\n        this.setState({\n          refresh: false\n        });\n      }\n      return count;\n    }\n  // works with above to force a refesh of the table\n  refresh() {\n      this.setState({\n        refresh: true\n      });\n    }\n\n  async saveToCanvas(){\n    console.log(\"sAVING\")\n    APIService.updateModules(this.props.course.id, this.state.data).then((res)=>{ //await\n      console.log('clearing flags');\n      this.setState({data: this.clearModifiedFlags(this.state.data)});\n      console.log(\"saved response\");\n      console.log(APIService.responses);\n      this.setState({ showSaveResults: true, responses: APIService.responses, modified: false,})\n      this.refresh();\n      console.log('refreshed');\n    });\n  }\n\n getCellActions(column, row) {\n    const cellActions = {\n      published: [\n         {\n           icon: <span><FontAwesomeIcon className=\"externalLinkIcon\" icon={faSync} /></span>,\n           callback: ()=>{\n             //iterate over state rows, look for matching id row from the data, chage publish field\n             let d = this.state.data;\n             for (let i=0;i<d.length;i++){\n               if (d[i].id == row.id){\n                 console.log('found the row, was '+d[i].published);\n                 d[i].published = (d[i].published == true ? false : true);//d[i][col+'new']\n                 console.log('now is '+d[i].published);\n                 d[i].modified.push('published');\n                 this.setState({data: d, modified: true,});\n                 this.refresh();\n                 return;\n               }\n             }\n           }\n        }\n      ],\n    };\n    return cellActions[column.key];\n  }\n\n  clearAllDates(){\n    let data = this.state.data;\n    console.log(data);\n    let newdata = data.map((row)=>{\n      if (row.unlock_at != ''){\n        row.unlock_at = '';\n        row.modified.push('unlock_at')\n      }\n      if (row.due_at != ''){\n        row.due_at = '';\n        row.modified.push('due_at')\n      }\n      return row;\n    })\n    console.log(newdata)\n    this.setState({data: newdata});\n    this.refresh();\n  }\n\n  bulkPublish(pub){\n    let data = this.state.data;\n    let newdata = data.map((row)=>{\n      if(row.published != pub) {\n        row.modified.push('published');\n        row.published = pub;\n      }\n      return row;\n    })\n    console.log(newdata);\n    this.setState({data: newdata, modified: true});\n    this.refresh();\n  }\n\n  render() {\n    //console.log(\"here\");console.log(data)\n\n    // from tag for canary rows={this.state.data} rowRenderer={CustomRowRenderer}\n    //<Button variant=\"warning\" onClick={this.revert}>Revert Changes</Button>\n    return (\n      <div>\n      <Container>\n        <Row>\n          <Col><h3>Modules</h3></Col>\n          <Col xs={6}>\n\n              <Button className={'bulk-actions-button'} variant=\"primary\" onClick={this.clearAllDates}>Clear All Dates</Button>\n              <Button className={'bulk-actions-button'} variant=\"primary\" onClick={()=>this.bulkPublish(false)}>Unpublish All</Button>\n              <Button className={'bulk-actions-button'} variant=\"primary\" onClick={()=>this.bulkPublish(true)}>Publish All</Button>\n\n          </Col>\n          <Col>\n            {this.state.modified &&\n                        <div><Button variant=\"primary\" className={'float-top'} onClick={this.saveToCanvas}>Save Changes</Button> </div>\n              }\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <DataGrid\n            columns={columns}\n            rowGetter={i => this.state.data[i]}\n            rowsCount={this.getRowCount()}\n            rowRenderer={CustomRowRenderer}\n            minHeight={(this.state.data.length*36 )+40}\n            enableCellSelect={true}\n            onGridRowsUpdated={this.onGridRowsUpdated}\n            getCellActions={this.getCellActions}\n            onGridSort={this.sortRows}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={this.state.showSaveResults} onHide={()=>{this.setState({showSaveResults: false, responses: [] })}}>\n       <Modal.Header closeButton>\n         <Modal.Title>Canvas Data Saved</Modal.Title>\n       </Modal.Header>\n       <Modal.Body>{this.state.responses.length} records were updated in Canvas</Modal.Body>\n       <Modal.Footer>\n         <Button variant=\"secondary\" onClick={()=>{this.setState({showSaveResults: false, responses: [] })}}>\n           Close\n         </Button>\n       </Modal.Footer>\n     </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CourseAssignments;\n","// Header.js\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport CourseInfo from './CourseInfo';\nimport CourseModules from './CourseModules';\nimport CourseAssignments from './CourseAssignments';\nimport { Navbar, Nav, NavDropdown, Container, Row, Col  } from 'react-bootstrap';\n\n\n// Import caccl\nimport initCACCL from 'caccl/client/cached';\n\nconst { api, getStatus } = initCACCL();\n\nclass Course extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      course: {\n        account: {},\n        term: {},\n        sections: [],\n        teachers: [],\n        students: [],\n        enrollments: [],\n        modules: [],\n        name: '',\n      },\n      courseId: props.match.params.number,\n    }\n  }\n\n  /**\n   * Called when the component mounted, pulls state and user profile from server\n   */\n  async componentDidMount() {\n    try{\n      let course = await api.course.get({\n        courseId: this.state.courseId,\n        includeSyllabus: true,\n        includeTerm: true,\n        includeAccount: true,\n        includeDescription: true,\n        includeSections: true,\n        includeTeachers: true,\n        includeCourseImage: true,\n        includeNeedsGradingCount: true,\n      });\n      console.log(course);\n      let modules = await api.other.endpoint({\n        path: '/api/v1/courses/'+ this.state.courseId +'/modules',\n        method: 'GET',\n        params:{\n          'include': ['items','content_details'],\n        },\n      });\n      course.modules = modules;\n      let assignments = await api.course.assignment.list({\n        courseId: this.state.courseId,\n      });\n      let assnType = assignments.map(el => {\n        if (el.discussion_topic){\n          el.type = 'Discussion';\n        }else {\n         el.type = 'Assignment';\n       }\n        return el;\n      });\n      course.assignments = assnType;\n      let students = await api.course.listStudents({\n        courseId: this.state.courseId,\n        includeEnrollments: true,\n      })\n      course.students = students;\n/*      let teachers = await api.course.listTeachers({\n        courseId: this.state.courseId,\n        includeEnrollments: true,\n      })\n      course.teachers = teachers; */\n      this.setState({course: course});\n    } catch (err) {\n        return this.setState({\n          message: `Error while retrieving course: ${err.message}`,\n        });\n    } //end catch\n  }\n\n  render() {\n    return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand>CourseTools</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href={process.env.REACT_APP_BASE_URL + '/course/' + this.props.match.params.number+ '/info'}>Course Info</Nav.Link>\n            <Nav.Link href={process.env.REACT_APP_BASE_URL + '/course/' + this.props.match.params.number+ '/modules'}>Course Modules</Nav.Link>\n            <Nav.Link href={process.env.REACT_APP_BASE_URL + '/course/' + this.props.match.params.number+ '/assignments'}>Course Assignments</Nav.Link>\n          </Nav>\n          <Navbar.Text>\n            <b>Course Title:</b> {this.state.course.name} <b>Course ID:</b> {this.props.match.params.number}\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n        <Switch>\n            <Route exact path='/course/:number'>\n              <CourseInfo number={this.props.match.params.number} course={this.state.course}/>\n            </Route>\n            <Route exact path='/course/:number/info'>\n              <CourseInfo number={this.props.match.params.number} course={this.state.course}/>\n            </Route>\n            <Route exact path='/course/:number/modules'>\n                <CourseModules  course={this.state.course}/>\n             </Route>\n            <Route exact path='/course/:number/assignments'>\n              <CourseAssignments course={this.state.course}/>\n            </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Course;\n","// Import caccl\n\nclass GroupPersistService {\n\n}\n\nGroupPersistService.saveCourseGroup = function(group, key){\n  console.log('setting course group');\n  console.log(group);\n  localStorage.setItem(key, JSON.stringify(group));\n}\nGroupPersistService.getCourseGroup = function(key){\n  console.log('getting course group '+key);\n  console.log(localStorage.getItem(key));\n  return JSON.parse(localStorage.getItem(key));\n}\n\n\nexport default GroupPersistService;\n","// Import caccl\nimport initCACCL from 'caccl/client/cached';\n\n// Import React\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport Table from './TableCourseList.js'\nimport Course from './Course';\nimport Select from 'react-select';\nimport { Navbar, Nav, NavDropdown, Container, Row, Col, Button, Form  } from 'react-bootstrap';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport GroupPersistService from './util/GroupPersistService';\n\n// Import resources\nimport logo from './logo.svg';\nimport './App.css';\n\n// Initialize caccl\n\nconst { api, getStatus } = initCACCL();\n\nfunction SelectList(props) {\n    const list = props.list || [];\n    console.log(\"list\");console.log(list);\n    const listItems = list.map((item) =>\n      <option value={item.id.toString()}>\n        {item.name}\n      </option>\n    );\n    if (props.includeEmptyOption){\n      listItems.unshift({id: '', name: '',});\n    }\n    return listItems\n  }\n\n\nclass App extends Component {\n  /**\n   * Initialize App component\n   */\n  constructor(props) {\n    super(props);\n\n\n    // Set up state\n    this.state = {\n      message: 'Loading! Just a moment...',\n      courses: [],\n      accountid: '',\n      account_name: '',\n      loading: false,\n      accounts: [{id:'',name:'',}],\n      terms: [{id:'',name:'',}],\n      keyword: '',\n      termid: '',\n      selected: [],\n      groupId: '',\n    };\n    this.handleAccountChange = this.handleAccountChange.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onSelectionChanged = this.onSelectionChanged.bind(this);\n    this.openCourseGroup = this.openCourseGroup.bind(this);\n  }\n\n  handleAccountChange(event) {\n      this.setState({accountid: event.target.value});\n  }\n  handleTermChange(event) {\n      this.setState({termid: event.target.value});\n  }\n  handleKeywordChange(event) {\n      this.setState({keyword: event.target.value});\n  }\n/*\n    handleAccountChange(value) {\n        this.setState({accountid: value});\n    }\n    handleTermChange(value) {\n          this.setState({termid: value});\n      }\n*/\n  async handleSubmit(event){\n      // stop HTML form submission\n      event.preventDefault();\n\n      // here pass message to ag-grid to gridOptions.api.showLoadingOverlay()\n      this.setState({loading: true,});\n\n      try {\n        // Get profile from Canvas via api\n        // let accountid = this.state.accountid;\n        let accountid = event.target.account.value;\n        let termid = event.target.term.value;\n        this.setState({accountid: accountid, termid: termid,});\n        let terms =  this.state.terms; //await api.account.enrollmentTerm.list({accountId: 1});\n\n        let courses = [];\n        if (accountid){\n          courses = await api.account.listCourses({\n              includeTotalStudents: true,\n              accountId: accountid,\n              includeAccountName: true,\n              includeTerm: true,\n              enrollmentTermId: termid || '',\n              searchTerm: event.target.keyword.value,\n            });\n        }else{\n          courses = await api.user.self.listCourses({\n              includeTotalStudents: true,\n              includeAccountName: true,\n              includeTerm: true,\n            });\n            courses = await api.other.endpoint({\n                path: '/api/v1/courses/',\n                method: 'GET',\n                params:{\n                  'include': ['term','account','total_students','needs_grading_count'],\n                },\n              });\n\n        }\n\n        // Update state\n        courses.forEach((el)=>{\n          el.term = this.lookupTermName(el.enrollment_term_id, terms);\n        });\n        //console.log(courses);\n        // here hide overlay\n        return this.setState({\n          courses:courses,\n          terms: terms,\n          loading: false,\n        });\n      } catch (err) {\n        // here hide overlay and apass error to ag-grid\n        this.setState({loading: false,});\n        return this.setState({\n          message: `Error while requesting user profile: ${err.message}`,\n        });\n      }\n    }\n\n    lookupTermName(id, terms){\n      for (let i=0; i< terms.length; i++){\n        if (id == terms[i].id){\n          return terms[i].name;\n        }\n      }\n    }\n\n  /**\n   * Called when the component mounted, pulls state and user profile from server\n   */\n  async componentDidMount() {\n\n    // Load profile information\n    try {\n      // Get profile from Canvas via api\n      let profile = await api.user.self.getProfile();\n\n      // get list of accounts for this user\n      let acc = await api.account.list();\n      let accounts = acc.map(el => {\n        return {\n          id: el.id,\n          name: el.name,\n          label: el.name,\n          value: el.id,\n        }\n      });\n      console.log(\"didMount accounts\");\n      console.log(accounts);\n      // get list of terms for all accounts\n      let tms = await api.account.enrollmentTerm.list({accountId: '1'});\n      tms.unshift({id:'',name:'',})\n      let terms = tms.map(el => {\n        return {\n          id: el.id,\n          name: el.name,\n          label: el.name,\n          value: el.id,\n        }\n      });\n      terms = terms.sort((a, b)=>{\n        if (a.name == 'Default Term') { return -1; }\n        if (b.name == 'Default Term') { return 1; }\n\n        if (a.name < b.name) {return -1; }\n        if (a.name > b.name) { return 1; }\n        return 0;\n      })\n\n      const response = await fetch(process.env.REACT_APP_SERVER_URL_PREFIX + 'config', {credentials: 'include',});  // this is a problem for dev\n      console.log(response);\n      const json = await response.json();\n      let canvasHost = json.canvasHost;\n      console.log(\"didMount terms\");\n      console.log(canvasHost);\n      console.log(terms);\n\n      // Update state\n      console.log(\"output\");\n      console.log(profile);\n      //modules = {rows: modules};\n      return this.setState({\n        message: `Hello ${profile.name}!`,\n        accounts: accounts,\n        terms: terms,\n        canvasHost: canvasHost,\n      });\n    } catch (err) {\n      return this.setState({\n        message: `Error while requesting user profile: ${err.message}`,\n      });\n    }\n  }\n\n  onSelectionChanged(list){\n    console.log(\"changed in app course list\")\n    let now = Date.now();\n    this.setState({selected: list, groupId: now, });\n    //this.props.groupSelectionChange(list);\n  }\n\n  openCourseGroup(e){\n    //console.log(this.state.selected);\n    // here we'd save the course group from this.state.selected\n    // then follow the link\n    e.preventDefault();\n\n    let now = Date.now();\n    let list = this.state.selected;\n    GroupPersistService.saveCourseGroup(list, now);\n    e.persist();\n\n    this.setState({ selected: list, groupId: now, }, ()=>{\n      //this.props.groupSelectionChange(list);\n      e.target.dispatchEvent(new MouseEvent(\"click\"));\n    });\n\n  }\n  /**\n   * Render the App\n   */\n  render() {\n    // Deconstruct the state\n    const { message, courses, terms, loading, canvasHost } = this.state;\n    console.log(\"state\");\n    console.log(this.state);\n    console.log(canvasHost);\n\n    const accountItems = this.state.accounts.map((acct) =>\n      <option value={acct.id}>{acct.name}</option>\n    );\n    const termItems = this.state.terms.map((term) =>\n      <option value={term.id}>{term.name}</option>\n    );\n    // Render the component\n    return (\n<div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>CourseTools</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Form inline onSubmit={this.handleSubmit}>\n\n            <Form.Group controlId=\"courselister.accountselect\" className='navFormItem'>\n              <Form.Label className={'navbar-dark navbar-text'}>Accounts:</Form.Label>\n              <Form.Control as=\"select\" name=\"account\" id=\"account\" value={this.state.accountid} onChange={this.handleAccountChange}>\n                  { accountItems }\n              </Form.Control>\n            </Form.Group>\n\n              <Form.Group controlId=\"courselister.termselect\"  className='navFormItem'>\n                <Form.Label className={'navbar-dark navbar-text'}>Terms:</Form.Label>\n                <Form.Control as=\"select\" name=\"term\" id=\"term\" value={this.state.termid} onChange={this.handleTermChange}>\n                    { termItems }\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"courselister.keyword\"  className='navFormItem'>\n                <Form.Label className={'navbar-dark navbar-text'}>Search Term:</Form.Label>\n                <Form.Control placeholder=\"(course title)\" type=\"text\" name=\"keyword\" id=\"keyword\" >\n\n                </Form.Control>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\"  className='navFormItem'>\n                Submit\n              </Button>\n\n          </Form>\n          <Navbar.Text className='navFormItem'>\n            { message }\n          </Navbar.Text>\n          <Navbar.Text id=\"resultCount\" className='navFormItem'> { courses.length ? 'Courses Found: ' + courses.length : '' }</Navbar.Text>\n          <Navbar.Text id=\"selectionCount\" className='navFormItem'> { this.state.selected.length ? '  Courses Selected: ' + this.state.selected.length : ''} &nbsp;&nbsp; { this.state.selected.length ? <a href={\"group/\"+this.state.groupId} onClick={ this.openCourseGroup } className='btn btn-primary' target=\"_new\">Open Course Group</a> : '' }</Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n\n\n\n\n      <Container fluid className=\"App\">\n\n       <Row>\n       <Col>\n\n\n          <Switch>\n              <Route exact path='/'>\n                <div className=\"container\">\n                  { /* modules && modules.map((mod) => (\n                    <li key={mod.id}>\n                      {mod.name}\n                    </li>\n                  )) */ }\n                  <Table courses= { courses }\n                         canvasHost={ canvasHost }\n                         loading = { loading }\n                         onSelectionChanged = { this.onSelectionChanged } />\n                </div>\n              </Route>\n          </Switch>\n\n\n\n          </Col>\n        </Row>\n      </Container>\n</div>\n    );\n  }\n}\n\nexport default App;\n","// Import caccl\nimport {mean, median, standardDeviation} from 'simple-statistics';\n\n\nfunction days_between(date1, date2) {\n\n    // The number of milliseconds in one day\n    const ONE_DAY = 1000 * 60 * 60 * 24;\n\n    // Calculate the difference in milliseconds\n    const differenceMs = Math.abs(date1 - date2);\n\n    // Convert back to days and return\n    return Math.round(differenceMs / ONE_DAY);\n\n}\n\nclass StudentAccess {\n\n  constructor(students){\n    this.students = students;\n\n    this.studentsNeverAccessed = [];\n    this.studentsAccessed = [];\n    this.meanLastAccess = 'N/A';\n    this.medianLastAccess = 'N/A';\n    this.createStudentLists();\n    this.calculateAccessStats();\n  }\n\n  createStudentLists(){\n    this.students.forEach(el =>{\n      if (el.enrollments[0].last_activity_at){\n        this.studentsAccessed.push(el);\n      }else{\n        this.studentsNeverAccessed.push(el);\n      }\n    });\n  }\n\n  calculateAccessStats(){\n    let lastAccessDays = this.studentsAccessed.map((val, idx, ar)=>{\n      // add days since last activity to the array, as a # of days\n      let lastAccessDate = new Date(val.enrollments[0].last_activity_at);\n      val.daysSinceActivity = days_between(Date.now(), lastAccessDate);\n      // return new array of just the number of days\n      return val.daysSinceActivity;\n    });\n    // with the array of only days:\n      // get mean and median\n    if (lastAccessDays && lastAccessDays.length>0){\n      this.meanLastAccess = mean(lastAccessDays).toFixed(1);\n      this.medianLastAccess = median(lastAccessDays).toFixed(1);\n\n      // now get stardard deviation and add that value to the studentsAccessed array\n\n      let stdDev = standardDeviation(lastAccessDays);\n      this.studentsAccessed.forEach((el, idx)=>{\n        el.last_access_std_dev = (el.daysSinceActivity - stdDev.toFixed(1)).toFixed(1);\n      });\n    }\n  }\n\n\n}// end class\n\n\n\n// average time since last access\n\n// number never accessed\n\n// list never accessed\n\n\n\nexport default StudentAccess;\n","// Header.js\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown, Container, Row, Col  } from 'react-bootstrap';\nimport GroupPersistService from './util/GroupPersistService'\nimport DataGrid from 'react-data-grid';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport StudentAccess from './analytics/StudentAccess';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt, faSync } from '@fortawesome/free-solid-svg-icons'\nimport Cog from 'dce-reactkit/lib/glyph/Cog';\n\n\n\n// Import caccl\nimport initCACCL from 'caccl/client/cached';\n\nconst { api, getStatus } = initCACCL();\n\n/* const columns = [\n  { key: \"id\", name: \"Actions\", width: 75, resizeable: false,},\n  { key: \"name\", name: \"Name\", width: 400, resizeable: true, editable: true, },\n  { key: \"workflow_state\", name: \"Published\", width: 100, resizeable: true, },\n  { key: \"modules-open-total\", name: \"Modules (Open/Total)\", width: 100, resizeable: true, },\n  { key: \"total_students\", name: \"Number of Students\", width: 100,  resizeable: true, },\n  { key: \"teachers\", name: \"Instructor\", width: 100, formatter: InstructorFormatter, resizeable: true, }, ///\n  { key: \"instructor_login_days\", name: \"Instructor: Last Visited (days)\", width: 100, resizeable: true, },\n\n];*/\n\nconst columns = [\n  { dataField: 'id', text: 'ID', formatter: CourseIdFormatter, headerStyle:  { width: '75px', },},\n  { dataField: 'name', text: 'Name', headerStyle: { width: '300px', },},\n  { dataField: 'workflow_state',text: 'Published', headerStyle: { width: '100px',} },\n  { dataField: \"modules-open-total\", formatter: ModulesFormatter, text: \"Modules (Open/ Total)\", resizeable: true, headerStyle: { width: '80px', }, },\n  { dataField: \"teachers\", text: \"Instructor (Last Visit)\",  formatter: InstructorFormatter, resizeable: true,  }, ///\n  { dataField: \"total_students\", text: \"Number of Students\",  headerStyle: { width: '80px', }, resizeable: true, },\n  { dataField: \"instructor_login_days\", formatter: ActivityFormatter, text: \"Activity Info\", width: 100, resizeable: true, },\n];\n\nlet canvasHost = '';\n\nfunction days_between(date1, date2) {\n\n    // The number of milliseconds in one day\n    const ONE_DAY = 1000 * 60 * 60 * 24;\n\n    // Calculate the difference in milliseconds\n    const differenceMs = Math.abs(date1 - date2);\n\n    // Convert back to days and return\n    return Math.round(differenceMs / ONE_DAY);\n\n}\n\nfunction ActivityFormatter(cell, el, index){\n  let s = '';\n  let sa = new StudentAccess(el.students);\n  //Accessed: {sa.studentsAccessed.length}<br />\n  return (<div>\n    Never Accessed: {sa.studentsNeverAccessed.length}<br />\n    Avg Days Since Access: {sa.meanLastAccess}<br />\n    Median Since Access: {sa.medianLastAccess}<br />\n  </div>)\n}\n\nfunction InstructorFormatter(cell, el, index){\n  let s = '';\n  return (<div>\n    {el.teachers.map((val, index) => {\n        let lastAccess = val.enrollments[0].last_activity_at;\n        let daysSinceActivity = days_between(Date.now(), new Date(lastAccess));\n        return <div key={val.id}><a href={'https://' + canvasHost + '/courses/' + el.id + '/users/' +val.id} target=\"_blank\" title='Open user page in Canvas (in a new tab)'>{val.name}</a> ({daysSinceActivity} days) <br /></div>\n      })}\n  </div>)\n}\nfunction CourseIdFormatter(cell, el, index){\n  return <a href={'https://' + canvasHost + '/courses/' +el.id} target=\"_blank\" title='Open in Canvas (in a new tab)'>{el.id}</a>\n}\nfunction ModulesFormatter(cell, el, index ){\n  return <div>{el.modules.reduce((acc, el)=>{return el.published ? ++acc : acc }, 0)} of {el.modules.length} <a href={process.env.REACT_APP_BASE_URL + '/course/' + el.id + '/modules'} target=\"_blank\" title=\"Open CourseTools Modules (opens in a new tab)\"><Cog /></a></div>\n}\n\nclass CourseGroup extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      courseGroup: GroupPersistService.getCourseGroup(props.match.params.number),\n      groupId: props.match.params.number,\n      tabledata: [],\n      data: [],\n    }\n  }\n  /**\n  Condenses rich course data into flattened strucutre that is passed to the table\n  on this page.\n  **/\n  flattenCourseData(course){\n    let row = course;\n    row.total_students = (course.students && course.students.length) || ''\n\n    return row;\n  }\n\n  /**\n   * Called when the component mounted, pulls state and user profile from server\n   */\n  async componentDidMount() {\n    // fetch the course data:\n    // all data:\n      // course details, module details, student details\n\n      console.log('did mount');\n\n      const response = fetch(process.env.REACT_APP_SERVER_URL_PREFIX + 'config', {credentials: 'include',}).then(async function (response){  // dev problem - locahost\n        console.log(response);\n        const json = await response.json();\n        canvasHost = json.canvasHost;\n      });\n\n      console.log(this.state.courseGroup)\n      try{\n        for(let i=0; i<this.state.courseGroup.length; i++){\n          let courseId = this.state.courseGroup[i].id;\n          let course = await api.course.get({\n            courseId: courseId,\n            includeSyllabus: true,\n            includeTerm: true,\n            includeAccount: true,\n            includeDescription: true,\n            includeSections: true,\n            includeCourseImage: true,\n            includeNeedsGradingCount: true,\n          });\n          console.log(course);\n          let modules = await api.other.endpoint({\n            path: '/api/v1/courses/'+ courseId +'/modules',\n            method: 'GET',\n            params:{\n              'include': ['items','content_details'],\n            },\n          });\n          course.modules = modules;\n          let assignments = await api.course.assignment.list({\n            courseId: courseId,\n          });\n          let assnType = assignments.map(el => {\n            if (el.discussion_topic){\n              el.type = 'Discussion';\n            }else {\n             el.type = 'Assignment';\n           }\n            return el;\n          });\n          course.assignments = assnType;\n          let students = await api.course.listStudents({\n            courseId: courseId,\n            includeEnrollments: true,\n          })\n          course.students = students;\n          let teachers = await api.course.listTeachers({\n            courseId: courseId,\n            includeEnrollments: true,\n          })\n          course.teachers = teachers;\n          let data = this.state.data;\n          data.push(course);\n          this.setState({data: data});\n\n          let tabledata = this.state.tabledata;\n          tabledata.push(this.flattenCourseData(course));\n          this.setState({data: data, tabledata: tabledata},);\n        }\n      } catch (err) {\n          return this.setState({\n            message: `Error while retrieving course: ${err.message}`,\n          });\n      } //end catch\n  }\n\n  getRowCount(){\n    return this.state.tabledata.length;\n  }\n\n  render() {\n    return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand>CourseGroupTools</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href={process.env.REACT_APP_BASE_URL + '/group/' + this.props.match.params.number + '/info'}>Course Group Info</Nav.Link>\n          </Nav>\n          <Navbar.Text>\n             <b>CourseGroup ID:</b> {this.props.match.params.number}\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n        <Switch>\n            <Route exact path='/group/:number'>\n              <Container>\n              <Row>\n                <Col>\n                <BootstrapTable\n                  keyField='id'\n                  data={ this.state.tabledata}\n                  columns={ columns }\n                  striped\n                  hover\n                  condensed\n                  />\n                </Col>\n              </Row>\n              </Container>\n            </Route>\n            <Route exact path='/group/:number/info'>  // fix this - new component\n              <Container>\n              <Row>\n                <Col>\n                <BootstrapTable\n                  keyField='id'\n                  data={ this.state.tabledata}\n                  columns={ columns }\n                  striped\n                  hover\n                  condensed\n                  />\n                </Col>\n              </Row>\n              </Container>\n            </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default CourseGroup;\n//<CourseGroupInfo number={this.props.match.params.number} course={this.state.courseGroup}/>\n/* <DataGrid\ncolumns={columns}\nrowGetter={i => this.state.tabledata[i]}\nrowsCount={this.getRowCount()}\nminHeight={(this.state.tabledata.length*36 )+40}\n/>\n*/\n","// Header.js\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport AppCourseListSelector from './AppCourseListSelector';\nimport Course from './Course';\nimport CourseGroup from './CourseGroup';\nimport { Switch, Route } from 'react-router-dom';\n\n\nclass Main extends Component {\n\n  constructor(props){\n    super(props);\n    this.state ={\n      groupSelection: [],\n    }\n    this.onGroupSelectionChanged = this.onGroupSelectionChanged.bind(this);\n  }\n\n  onGroupSelectionChanged(selection){\n    console.log('changed in main');\n    console.log(selection);\n    this.setState({groupSelection: selection,});\n  }\n\n  render() {\n    return (\n    <main>\n     <Switch>\n        <Route exact path='/' >\n          <AppCourseListSelector groupSelectionChange={this.onGroupSelectionChanged}/>\n        </Route>\n        {/* both /roster and /roster/:number begin with /roster\n        <Route path='/roster' component={Roster}/>\n        <Route path='/schedule' component={Schedule}/>\n        */ }\n        <Route path='/course/:number' component={Course}/>\n        <Route path='/group/:number' component={CourseGroup} />\n      </Switch>\n    </main>\n    );\n  }\n}\n\nexport default Main;\n","// Table.js\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\n//import 'react-dates/lib/css/_datepicker.css';\nimport 'react-dates/initialize';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n\n      <div>\n        <Main />\n      </div>\n    );\n  }\n}\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_BASE_URL}>\n    <App />\n  </BrowserRouter>\n  ),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}